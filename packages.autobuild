require_relative 'esrocos_autoproj'

cmake_package "external/static_opencv" do |pkg|
  pkg.define("CMAKE_BUILD_TYPE","Release")
  pkg.define("BUILD_SHARED_LIBS","OFF")
end

cmake_package "control/ompl" do |pkg|
  pkg.define("CMAKE_BUILD_TYPE","Release")
  # CMAKE_PREFIX_PATH set by autoproj interfers with building OMPL; use default (empty)
  pkg.define("CMAKE_PREFIX_PATH","")
  # Prevent the ompl-CMakeLists from spawning a browser to register...
  pkg.define("OMPL_REGISTRATION","OFF")
  # Don't build OMPL tests or demos
  pkg.define("OMPL_BUILD_TESTS","OFF")
  pkg.define("OMPL_BUILD_DEMOS","OFF")
end

cmake_package "control/omplapp" do |pkg|
  pkg.define("CMAKE_BUILD_TYPE","Release")
  # CMAKE_PREFIX_PATH set by autoproj interfers with building OMPL; use default (empty)
  pkg.define("CMAKE_PREFIX_PATH","")
  # Prevent the ompl-CMakeLists from spawning a browser to register...
  pkg.define("OMPL_REGISTRATION","Off")
  # Don't build OMPL tests or demos
  pkg.define("OMPL_BUILD_TESTS","OFF")
  pkg.define("OMPL_BUILD_DEMOS","OFF")
  
  # Add dependencies
  pkg.depends_on "control/ompl"
  pkg.depends_on "libfcl-0.5-dev"
  pkg.depends_on "libccd-dev"
  
  # For building, omplapp assumes that ompl is a subdirectory; create symbolic link at configure step
  def pkg.configure
    ompldir = File.join(Autobuild.srcdir, 'control', 'ompl')
    symdir  = File.join(Autobuild.srcdir, 'control', 'omplapp', 'ompl')
    system("ln -sf #{ompldir} #{symdir}")

    # Normal configure
    super
  end
  
end

cmake_package "external/dart" do |pkg|
  pkg.define("CMAKE_BUILD_TYPE","Release")
  # CMAKE_PREFIX_PATH set by autoproj interfers with building DART; use default (empty)
  pkg.define("CMAKE_PREFIX_PATH","")
  # Add dependencies
  pkg.depends_on "control/ompl"
  pkg.depends_on "libfcl-0.5-dev"
  pkg.depends_on "clang-format"
  pkg.depends_on "libnlopt-dev"
  pkg.depends_on "coinor-libipopt-dev"
  pkg.depends_on "libxmu-dev"
end

cmake_package "tools/robotic_arm" do |pkg|
  pkg.define("CMAKE_BUILD_TYPE","Debug")
  pkg.depends_on "external/dart"
  pkg.depends_on "control/omplapp"
  
  # Enable build for RTEMS (only ur_driver_cpp is built for RTEMS)
  if(ENV.has_key?('ESROCOS_RTEMS_TARGET'))
    Esrocos.build_rtems_gailser(pkg, ENV['ESROCOS_RTEMS_TARGET'])
  end
end

cmake_package "bundles/ur5_control" do |pkg|
  pkg.define("CMAKE_BUILD_TYPE","Debug")
  Esrocos.set_taste_package(pkg)
end

#import_package "external/luarocks" do |pkg|
  # Add dependencies
#  pkg.depends_on "lua5.2"
#  system("./configure")
  
#end

cmake_package "bundles/orbital_test" do |pkg|
  pkg.define("CMAKE_BUILD_TYPE","Debug")
  Esrocos.set_taste_package(pkg)
end

cmake_package "bundles/cmm_control" do |pkg|
  pkg.define("CMAKE_BUILD_TYPE","Debug")
  Esrocos.set_taste_package(pkg)
end

cmake_package "bundles/cmm_control_simple" do |pkg|
  pkg.define("CMAKE_BUILD_TYPE","Debug")
  Esrocos.set_taste_package(pkg)
end
